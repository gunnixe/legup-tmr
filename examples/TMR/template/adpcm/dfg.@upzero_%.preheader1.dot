digraph {
Node0x3a9ac60[label="  %2 = load i32* %dlti, align 4, !tbaa !..."];
Node0x3a9ac60 -> Node0x3a9ac60[label="D:0.00ns L:2",color=blue];
Node0x3aa0d40[label="  store i32 %10, i32* %bli, align 4, !tb..."];
Node0x3a9ac60 -> Node0x3aa0d40[label="D:0.00ns L:2",color=red];
Node0x3aa1c40[label="  store i32 %21, i32* %17, align 4, !tba..."];
Node0x3a9ac60 -> Node0x3aa1c40[label="D:0.00ns L:2",color=red];
Node0x3aa2b40[label="  store i32 %32, i32* %28, align 4, !tba..."];
Node0x3a9ac60 -> Node0x3aa2b40[label="D:0.00ns L:2",color=red];
Node0x3aa3a40[label="  store i32 %43, i32* %39, align 4, !tba..."];
Node0x3a9ac60 -> Node0x3aa3a40[label="D:0.00ns L:2",color=red];
Node0x3aa4d90[label="  store i32 %54, i32* %50, align 4, !tba..."];
Node0x3a9ac60 -> Node0x3aa4d90[label="D:0.00ns L:2",color=red];
Node0x3aa5c90[label="  store i32 %65, i32* %61, align 4, !tba..."];
Node0x3a9ac60 -> Node0x3aa5c90[label="D:0.00ns L:2",color=red];
Node0x3a9ada0[label="  %3 = mul nsw i32 %2, %dlt"];
Node0x3a9ada0 -> Node0x3a9ada0[label="D:6.50ns L:0",color=blue];
Node0x3a9aee0[label="  %4 = ashr i32 %3, 31"];
Node0x3a9aee0 -> Node0x3a9aee0[label="D:0.00ns L:0",color=blue];
Node0x3aa05c0[label="  %5 = and i32 %4, -256"];
Node0x3aa05c0 -> Node0x3aa05c0[label="D:0.00ns L:0",color=blue];
Node0x3aa0700[label="  %6 = or i32 %5, 128"];
Node0x3aa0700 -> Node0x3aa0700[label="D:0.00ns L:0",color=blue];
Node0x3aa0840[label="  %7 = load i32* %bli, align 4, !tbaa !1"];
Node0x3aa0840 -> Node0x3aa0840[label="D:0.00ns L:2",color=blue];
Node0x3aa0840 -> Node0x3aa0d40[label="D:0.00ns L:2",color=red];
Node0x3aa0980[label="  %8 = mul nsw i32 %7, 255"];
Node0x3aa0980 -> Node0x3aa0980[label="D:6.50ns L:0",color=blue];
Node0x3aa0ac0[label="  %9 = ashr i32 %8, 8"];
Node0x3aa0ac0 -> Node0x3aa0ac0[label="D:0.00ns L:0",color=blue];
Node0x3aa0c00[label="  %10 = add nsw i32 %6, %9"];
Node0x3aa0c00 -> Node0x3aa0c00[label="D:3.81ns L:0",color=blue];
Node0x3aa0fc0[label="  %12 = load i32* %11, align 4, !tbaa !1"];
Node0x3aa0d40 -> Node0x3aa0fc0[label="D:13.00ns L:1",color=red];
Node0x3aa1ec0[label="  %23 = load i32* %22, align 4, !tbaa !1"];
Node0x3aa0d40 -> Node0x3aa1ec0[label="D:13.00ns L:1",color=red];
Node0x3aa2dc0[label="  %34 = load i32* %33, align 4, !tbaa !1"];
Node0x3aa0d40 -> Node0x3aa2dc0[label="D:13.00ns L:1",color=red];
Node0x3a9a850[label="  %45 = load i32* %44, align 4, !tbaa !1"];
Node0x3aa0d40 -> Node0x3a9a850[label="D:13.00ns L:1",color=red];
Node0x3aa5010[label="  %56 = load i32* %55, align 4, !tbaa !1"];
Node0x3aa0d40 -> Node0x3aa5010[label="D:13.00ns L:1",color=red];
Node0x3aa0e80[label="  %11 = getelementptr inbounds i32* %dlt..."];
Node0x3aa0e80 -> Node0x3aa0e80[label="D:0.00ns L:0",color=blue];
Node0x3aa0e80 -> Node0x3aa0e80[label="D:0.00ns L:0",color=blue];
Node0x3aa0fc0 -> Node0x3aa0fc0[label="D:0.00ns L:2",color=blue];
Node0x3aa0fc0 -> Node0x3aa1c40[label="D:0.00ns L:2",color=red];
Node0x3aa0fc0 -> Node0x3aa2b40[label="D:0.00ns L:2",color=red];
Node0x3aa0fc0 -> Node0x3aa3a40[label="D:0.00ns L:2",color=red];
Node0x3aa0fc0 -> Node0x3aa4d90[label="D:0.00ns L:2",color=red];
Node0x3aa0fc0 -> Node0x3aa5c90[label="D:0.00ns L:2",color=red];
Node0x3aa1100[label="  %13 = mul nsw i32 %12, %dlt"];
Node0x3aa1100 -> Node0x3aa1100[label="D:6.50ns L:0",color=blue];
Node0x3aa1240[label="  %14 = ashr i32 %13, 31"];
Node0x3aa1240 -> Node0x3aa1240[label="D:0.00ns L:0",color=blue];
Node0x3aa1380[label="  %15 = and i32 %14, -256"];
Node0x3aa1380 -> Node0x3aa1380[label="D:0.00ns L:0",color=blue];
Node0x3aa14c0[label="  %16 = or i32 %15, 128"];
Node0x3aa14c0 -> Node0x3aa14c0[label="D:0.00ns L:0",color=blue];
Node0x3aa1600[label="  %17 = getelementptr inbounds i32* %bli..."];
Node0x3aa1600 -> Node0x3aa1600[label="D:0.00ns L:0",color=blue];
Node0x3aa1600 -> Node0x3aa1600[label="D:0.00ns L:0",color=blue];
Node0x3aa1740[label="  %18 = load i32* %17, align 4, !tbaa !1"];
Node0x3aa1740 -> Node0x3aa1740[label="D:0.00ns L:2",color=blue];
Node0x3aa1740 -> Node0x3aa1c40[label="D:0.00ns L:2",color=red];
Node0x3aa1880[label="  %19 = mul nsw i32 %18, 255"];
Node0x3aa1880 -> Node0x3aa1880[label="D:6.50ns L:0",color=blue];
Node0x3aa19c0[label="  %20 = ashr i32 %19, 8"];
Node0x3aa19c0 -> Node0x3aa19c0[label="D:0.00ns L:0",color=blue];
Node0x3aa1b00[label="  %21 = add nsw i32 %16, %20"];
Node0x3aa1b00 -> Node0x3aa1b00[label="D:3.81ns L:0",color=blue];
Node0x3aa1c40 -> Node0x3aa1ec0[label="D:13.00ns L:1",color=red];
Node0x3aa1c40 -> Node0x3aa2dc0[label="D:13.00ns L:1",color=red];
Node0x3aa1c40 -> Node0x3a9a850[label="D:13.00ns L:1",color=red];
Node0x3aa1c40 -> Node0x3aa5010[label="D:13.00ns L:1",color=red];
Node0x3aa1d80[label="  %22 = getelementptr inbounds i32* %dlt..."];
Node0x3aa1d80 -> Node0x3aa1d80[label="D:0.00ns L:0",color=blue];
Node0x3aa1d80 -> Node0x3aa1d80[label="D:0.00ns L:0",color=blue];
Node0x3aa1ec0 -> Node0x3aa1ec0[label="D:0.00ns L:2",color=blue];
Node0x3aa1ec0 -> Node0x3aa2b40[label="D:0.00ns L:2",color=red];
Node0x3aa1ec0 -> Node0x3aa3a40[label="D:0.00ns L:2",color=red];
Node0x3aa1ec0 -> Node0x3aa4d90[label="D:0.00ns L:2",color=red];
Node0x3aa1ec0 -> Node0x3aa5c90[label="D:0.00ns L:2",color=red];
Node0x3aa2000[label="  %24 = mul nsw i32 %23, %dlt"];
Node0x3aa2000 -> Node0x3aa2000[label="D:6.50ns L:0",color=blue];
Node0x3aa2140[label="  %25 = ashr i32 %24, 31"];
Node0x3aa2140 -> Node0x3aa2140[label="D:0.00ns L:0",color=blue];
Node0x3aa2280[label="  %26 = and i32 %25, -256"];
Node0x3aa2280 -> Node0x3aa2280[label="D:0.00ns L:0",color=blue];
Node0x3aa23c0[label="  %27 = or i32 %26, 128"];
Node0x3aa23c0 -> Node0x3aa23c0[label="D:0.00ns L:0",color=blue];
Node0x3aa2500[label="  %28 = getelementptr inbounds i32* %bli..."];
Node0x3aa2500 -> Node0x3aa2500[label="D:0.00ns L:0",color=blue];
Node0x3aa2500 -> Node0x3aa2500[label="D:0.00ns L:0",color=blue];
Node0x3aa2640[label="  %29 = load i32* %28, align 4, !tbaa !1"];
Node0x3aa2640 -> Node0x3aa2640[label="D:0.00ns L:2",color=blue];
Node0x3aa2640 -> Node0x3aa2b40[label="D:0.00ns L:2",color=red];
Node0x3aa2780[label="  %30 = mul nsw i32 %29, 255"];
Node0x3aa2780 -> Node0x3aa2780[label="D:6.50ns L:0",color=blue];
Node0x3aa28c0[label="  %31 = ashr i32 %30, 8"];
Node0x3aa28c0 -> Node0x3aa28c0[label="D:0.00ns L:0",color=blue];
Node0x3aa2a00[label="  %32 = add nsw i32 %27, %31"];
Node0x3aa2a00 -> Node0x3aa2a00[label="D:3.81ns L:0",color=blue];
Node0x3aa2b40 -> Node0x3aa2dc0[label="D:13.00ns L:1",color=red];
Node0x3aa2b40 -> Node0x3a9a850[label="D:13.00ns L:1",color=red];
Node0x3aa2b40 -> Node0x3aa5010[label="D:13.00ns L:1",color=red];
Node0x3aa2c80[label="  %33 = getelementptr inbounds i32* %dlt..."];
Node0x3aa2c80 -> Node0x3aa2c80[label="D:0.00ns L:0",color=blue];
Node0x3aa2c80 -> Node0x3aa2c80[label="D:0.00ns L:0",color=blue];
Node0x3aa2dc0 -> Node0x3aa2dc0[label="D:0.00ns L:2",color=blue];
Node0x3aa2dc0 -> Node0x3aa3a40[label="D:0.00ns L:2",color=red];
Node0x3aa2dc0 -> Node0x3aa4d90[label="D:0.00ns L:2",color=red];
Node0x3aa2dc0 -> Node0x3aa5c90[label="D:0.00ns L:2",color=red];
Node0x3aa2f00[label="  %35 = mul nsw i32 %34, %dlt"];
Node0x3aa2f00 -> Node0x3aa2f00[label="D:6.50ns L:0",color=blue];
Node0x3aa3040[label="  %36 = ashr i32 %35, 31"];
Node0x3aa3040 -> Node0x3aa3040[label="D:0.00ns L:0",color=blue];
Node0x3aa3180[label="  %37 = and i32 %36, -256"];
Node0x3aa3180 -> Node0x3aa3180[label="D:0.00ns L:0",color=blue];
Node0x3aa32c0[label="  %38 = or i32 %37, 128"];
Node0x3aa32c0 -> Node0x3aa32c0[label="D:0.00ns L:0",color=blue];
Node0x3aa3400[label="  %39 = getelementptr inbounds i32* %bli..."];
Node0x3aa3400 -> Node0x3aa3400[label="D:0.00ns L:0",color=blue];
Node0x3aa3400 -> Node0x3aa3400[label="D:0.00ns L:0",color=blue];
Node0x3aa3540[label="  %40 = load i32* %39, align 4, !tbaa !1"];
Node0x3aa3540 -> Node0x3aa3540[label="D:0.00ns L:2",color=blue];
Node0x3aa3540 -> Node0x3aa3a40[label="D:0.00ns L:2",color=red];
Node0x3aa3680[label="  %41 = mul nsw i32 %40, 255"];
Node0x3aa3680 -> Node0x3aa3680[label="D:6.50ns L:0",color=blue];
Node0x3aa37c0[label="  %42 = ashr i32 %41, 8"];
Node0x3aa37c0 -> Node0x3aa37c0[label="D:0.00ns L:0",color=blue];
Node0x3aa3900[label="  %43 = add nsw i32 %38, %42"];
Node0x3aa3900 -> Node0x3aa3900[label="D:3.81ns L:0",color=blue];
Node0x3aa3a40 -> Node0x3a9a850[label="D:13.00ns L:1",color=red];
Node0x3aa3a40 -> Node0x3aa5010[label="D:13.00ns L:1",color=red];
Node0x3a9a710[label="  %44 = getelementptr inbounds i32* %dlt..."];
Node0x3a9a710 -> Node0x3a9a710[label="D:0.00ns L:0",color=blue];
Node0x3a9a710 -> Node0x3a9a710[label="D:0.00ns L:0",color=blue];
Node0x3a9a850 -> Node0x3a9a850[label="D:0.00ns L:2",color=blue];
Node0x3a9a850 -> Node0x3aa4d90[label="D:0.00ns L:2",color=red];
Node0x3a9a850 -> Node0x3aa5c90[label="D:0.00ns L:2",color=red];
Node0x3a9a990[label="  %46 = mul nsw i32 %45, %dlt"];
Node0x3a9a990 -> Node0x3a9a990[label="D:6.50ns L:0",color=blue];
Node0x3aa4390[label="  %47 = ashr i32 %46, 31"];
Node0x3aa4390 -> Node0x3aa4390[label="D:0.00ns L:0",color=blue];
Node0x3aa44d0[label="  %48 = and i32 %47, -256"];
Node0x3aa44d0 -> Node0x3aa44d0[label="D:0.00ns L:0",color=blue];
Node0x3aa4610[label="  %49 = or i32 %48, 128"];
Node0x3aa4610 -> Node0x3aa4610[label="D:0.00ns L:0",color=blue];
Node0x3aa4750[label="  %50 = getelementptr inbounds i32* %bli..."];
Node0x3aa4750 -> Node0x3aa4750[label="D:0.00ns L:0",color=blue];
Node0x3aa4750 -> Node0x3aa4750[label="D:0.00ns L:0",color=blue];
Node0x3aa4890[label="  %51 = load i32* %50, align 4, !tbaa !1"];
Node0x3aa4890 -> Node0x3aa4890[label="D:0.00ns L:2",color=blue];
Node0x3aa4890 -> Node0x3aa4d90[label="D:0.00ns L:2",color=red];
Node0x3aa49d0[label="  %52 = mul nsw i32 %51, 255"];
Node0x3aa49d0 -> Node0x3aa49d0[label="D:6.50ns L:0",color=blue];
Node0x3aa4b10[label="  %53 = ashr i32 %52, 8"];
Node0x3aa4b10 -> Node0x3aa4b10[label="D:0.00ns L:0",color=blue];
Node0x3aa4c50[label="  %54 = add nsw i32 %49, %53"];
Node0x3aa4c50 -> Node0x3aa4c50[label="D:3.81ns L:0",color=blue];
Node0x3aa4d90 -> Node0x3aa5010[label="D:13.00ns L:1",color=red];
Node0x3aa4ed0[label="  %55 = getelementptr inbounds i32* %dlt..."];
Node0x3aa4ed0 -> Node0x3aa4ed0[label="D:0.00ns L:0",color=blue];
Node0x3aa4ed0 -> Node0x3aa4ed0[label="D:0.00ns L:0",color=blue];
Node0x3aa5010 -> Node0x3aa5010[label="D:0.00ns L:2",color=blue];
Node0x3aa5010 -> Node0x3aa5c90[label="D:0.00ns L:2",color=red];
Node0x3aa5150[label="  %57 = mul nsw i32 %56, %dlt"];
Node0x3aa5150 -> Node0x3aa5150[label="D:6.50ns L:0",color=blue];
Node0x3aa5290[label="  %58 = ashr i32 %57, 31"];
Node0x3aa5290 -> Node0x3aa5290[label="D:0.00ns L:0",color=blue];
Node0x3aa53d0[label="  %59 = and i32 %58, -256"];
Node0x3aa53d0 -> Node0x3aa53d0[label="D:0.00ns L:0",color=blue];
Node0x3aa5510[label="  %60 = or i32 %59, 128"];
Node0x3aa5510 -> Node0x3aa5510[label="D:0.00ns L:0",color=blue];
Node0x3aa5650[label="  %61 = getelementptr inbounds i32* %bli..."];
Node0x3aa5650 -> Node0x3aa5650[label="D:0.00ns L:0",color=blue];
Node0x3aa5650 -> Node0x3aa5650[label="D:0.00ns L:0",color=blue];
Node0x3aa5790[label="  %62 = load i32* %61, align 4, !tbaa !1"];
Node0x3aa5790 -> Node0x3aa5790[label="D:0.00ns L:2",color=blue];
Node0x3aa5790 -> Node0x3aa5c90[label="D:0.00ns L:2",color=red];
Node0x3aa58d0[label="  %63 = mul nsw i32 %62, 255"];
Node0x3aa58d0 -> Node0x3aa58d0[label="D:6.50ns L:0",color=blue];
Node0x3aa5a10[label="  %64 = ashr i32 %63, 8"];
Node0x3aa5a10 -> Node0x3aa5a10[label="D:0.00ns L:0",color=blue];
Node0x3aa5b50[label="  %65 = add nsw i32 %60, %64"];
Node0x3aa5b50 -> Node0x3aa5b50[label="D:3.81ns L:0",color=blue];
}
